@using OpenRpg.Core.Modifications
@using OpenRpg.Core.Requirements
@using OpenRpg.Editor.Infrastructure.Helpers

<ListEditor Data="ModificationAllowances" OnUpdate="OnUpdate" TItem="ModificationAllowance">
    <HeaderTemplate>
        <th><abbr title="Modification Type">Allowance Type</abbr></th>
        <th><abbr title="Allowed Amount">Allowed Amount</abbr></th>
    </HeaderTemplate>
    <RowTemplate>
        <td>
            <div class="control">
                <div class="select">
                    <select bind="@context.ModificationType">
                        @foreach (var modificationType in TypesHelper.GetModificationTypes)
                        {
                            <option value=@modificationType.Id>@modificationType.Name</option>
                        }
                    </select>
                </div>
            </div>
        </td>
        <td>
            <div class="control">
                <input class="input" type="text" bind="@context.AmountAllowed" />
            </div>
        </td>
    </RowTemplate>
    <NestedRowTemplate>
        <div class="m-md is-rounded has-shadow p-md has-background-dark has-text-centered">
            <h5 class="has-text-light">Modification Allowance Requirements</h5>
            <RequirementsEditor Requirements="context.Requirements" OnUpdate="requirements => UpdateRequirements(context, requirements)">
            </RequirementsEditor> 
        </div>
    </NestedRowTemplate>
</ListEditor>

@functions {
    [Parameter]
    public IEnumerable<ModificationAllowance> ModificationAllowances { get; set; }
    
    [Parameter]
    public EventCallback<List<ModificationAllowance>> OnUpdate { get; set; }
    
    public void UpdateRequirements(ModificationAllowance currentModification, IEnumerable<Requirement> updatedRequirements)
    {
        currentModification.Requirements = updatedRequirements;
        StateHasChanged();
    }
}
