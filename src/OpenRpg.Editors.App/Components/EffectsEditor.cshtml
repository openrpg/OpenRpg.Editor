@using System
@using System.Collections.Generic
@using Microsoft.AspNetCore.Blazor.Components
@using OpenRpg.Core.Effects
@using OpenRpg.Core.Requirements
@using OpenRpg.Editors.App.Helpers

<ListEditor Data="@Effects" OnUpdate="@OnUpdate" TItem="Effect">
    <HeaderTemplate>
        <th><abbr title="Effect Type">Effect Type</abbr></th>
        <th><abbr title="Potency">Potency</abbr></th>
    </HeaderTemplate>
    <RowTemplate>
        <td>
            <div class="control">
                <div class="select">
                    <select bind="@context.EffectType">
                        @foreach (var effectType in TypesHelper.GetEffectTypes)
                        {
                            <option value=@effectType.Id>@effectType.Name</option>
                        }
                    </select>
                </div>
            </div>
        </td>
        <td>
            <div class="control">
                <input class="input" type="text" bind="@context.Potency" />
            </div>
        </td>
    </RowTemplate>
    <NestedRowTemplate>
        <div class="m-md is-rounded has-shadow p-md has-background-dark has-text-centered">
            <h5 class="has-text-light">Effect Requirements</h5>
            <RequirementsEditor Requirements="@context.Requirements" OnUpdate="@(requirements => UpdateRequirements(context, requirements))">
            </RequirementsEditor> 
        </div>
    </NestedRowTemplate>
</ListEditor>

@functions {
    [Parameter]
    IEnumerable<Effect> Effects { get; set; }

    [Parameter]
    Action<IEnumerable<Effect>> OnUpdate { get; set; }
    
    public void UpdateRequirements(Effect currentEffect, IEnumerable<Requirement> updatedRequirements)
    {
        currentEffect.Requirements = updatedRequirements;
        StateHasChanged();
    }
}
